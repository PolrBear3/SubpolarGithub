//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Packages/Player Controls/Player Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player Controls"",
    ""maps"": [
        {
            ""name"": ""In Game"",
            ""id"": ""efdb47f0-522a-4445-9e7d-e8f0829c5b8a"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""7931557a-d6a7-4fe2-91b7-6cacc2365fd0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""81506f12-3e06-4b1b-9201-229d1bfb8153"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Action1"",
                    ""type"": ""Button"",
                    ""id"": ""989f30a4-c0f9-45d1-a39a-a5d8c1cb76c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Action2"",
                    ""type"": ""Button"",
                    ""id"": ""70ae8d63-c7b9-4806-9e68-2e7b80582606"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""d1595ce5-d6c6-42d4-a7e8-543df1931ec1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8fc3e8db-f71e-498e-8981-7e003e82b314"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fa7d97d6-59b8-48b6-b65a-d6f6a78dc6b0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1543b33d-e077-47d9-a568-02404ede6a83"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b248a255-e9a7-4697-a404-99ede1d8002b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""6bb9e90a-67b8-4bdd-9560-3f16f9a90fdb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6137bf0d-2881-4afa-bf61-dcad549b8100"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a6a17d61-4eda-4716-af77-9d266b89a8ef"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5ba1b7f2-f346-4361-af08-d1948fcf0236"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""394cc795-0435-44ea-a4d8-dff71b24df13"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8c8495df-9973-4bd3-87d9-77a67c1db4cf"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9236cb4-ea9a-4643-a9d1-cf3ff9f9a5ff"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Action1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c21ee1d1-84b6-41b4-8529-d3ccd57b1bf0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Action2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI Control"",
            ""id"": ""99f43c81-346b-4db0-ba2c-8eb1145cf11c"",
            ""actions"": [
                {
                    ""name"": ""Cursor Control"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8ceb49e6-5df3-4e54-bb2e-64a7b06a0cc5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""f964ffd7-7696-4a67-8d2e-e88782e79151"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option1"",
                    ""type"": ""Button"",
                    ""id"": ""829e0dd1-ecea-48ec-a5cc-2a0d8db2943e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Option2"",
                    ""type"": ""Button"",
                    ""id"": ""9f506fb7-55ce-45de-80d2-d9b9ef26b2e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""f1945b95-43e3-4537-a93c-522e3c17286b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NumKey1"",
                    ""type"": ""Button"",
                    ""id"": ""d24a02e5-1064-4672-bee8-a27aed44f364"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NumKey2"",
                    ""type"": ""Button"",
                    ""id"": ""bb5545b0-5356-43ed-957b-bca5990dadba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NumKey3"",
                    ""type"": ""Button"",
                    ""id"": ""b5a86fd7-ce99-4690-b06a-74b2a144ba6b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NumKey4"",
                    ""type"": ""Button"",
                    ""id"": ""e843842c-d396-4f7f-8adb-918860a3720e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""0d5e13d6-afb1-41ea-a734-4f46cd506655"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor Control"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cea1c8f8-6045-46ce-8be4-534cf6e1802e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Cursor Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0609c459-8853-417b-b49b-55f8c57380a5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Cursor Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""58a64cf3-8ba0-47fa-bd16-ec0b15482c7b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Cursor Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""737b51a5-d859-4a7e-a704-aea3de920a66"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Cursor Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""bfcab8f3-f708-42a8-97ea-0afc1389fa2b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cursor Control"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""76247b4e-5928-4afc-9387-8af80f194af9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Cursor Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""af868131-ca96-4ef7-8b09-fad406f63860"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Cursor Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1ee24c40-f3c0-44fa-86fe-0f3b03ec61b7"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Cursor Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f024daaf-3ef3-48b4-a235-e9524e3f7f5a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Cursor Control"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""83093002-2ffb-4f7f-91b4-4c12d2d93da9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce3de986-ecfe-4f71-a88f-efadd9af2f87"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47e436d2-ac48-4d7f-8180-c42579c2ed98"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Option2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab6654fe-5947-49bd-b0d7-18795c87c3e0"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC"",
                    ""action"": ""Option1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d942b88-808a-41d6-839b-788b4e4fd559"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NumKey1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10fc85f7-cc18-4073-8b4f-0302f5339a18"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NumKey2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f928ac8e-8532-4268-b467-194f5e114b76"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NumKey3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14150833-863c-4f27-b5b6-4a90fe120b6c"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NumKey4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Screen"",
            ""bindingGroup"": ""Screen"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // In Game
        m_InGame = asset.FindActionMap("In Game", throwIfNotFound: true);
        m_InGame_Movement = m_InGame.FindAction("Movement", throwIfNotFound: true);
        m_InGame_Interact = m_InGame.FindAction("Interact", throwIfNotFound: true);
        m_InGame_Action1 = m_InGame.FindAction("Action1", throwIfNotFound: true);
        m_InGame_Action2 = m_InGame.FindAction("Action2", throwIfNotFound: true);
        // UI Control
        m_UIControl = asset.FindActionMap("UI Control", throwIfNotFound: true);
        m_UIControl_CursorControl = m_UIControl.FindAction("Cursor Control", throwIfNotFound: true);
        m_UIControl_Select = m_UIControl.FindAction("Select", throwIfNotFound: true);
        m_UIControl_Option1 = m_UIControl.FindAction("Option1", throwIfNotFound: true);
        m_UIControl_Option2 = m_UIControl.FindAction("Option2", throwIfNotFound: true);
        m_UIControl_Exit = m_UIControl.FindAction("Exit", throwIfNotFound: true);
        m_UIControl_NumKey1 = m_UIControl.FindAction("NumKey1", throwIfNotFound: true);
        m_UIControl_NumKey2 = m_UIControl.FindAction("NumKey2", throwIfNotFound: true);
        m_UIControl_NumKey3 = m_UIControl.FindAction("NumKey3", throwIfNotFound: true);
        m_UIControl_NumKey4 = m_UIControl.FindAction("NumKey4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // In Game
    private readonly InputActionMap m_InGame;
    private List<IInGameActions> m_InGameActionsCallbackInterfaces = new List<IInGameActions>();
    private readonly InputAction m_InGame_Movement;
    private readonly InputAction m_InGame_Interact;
    private readonly InputAction m_InGame_Action1;
    private readonly InputAction m_InGame_Action2;
    public struct InGameActions
    {
        private @PlayerControls m_Wrapper;
        public InGameActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_InGame_Movement;
        public InputAction @Interact => m_Wrapper.m_InGame_Interact;
        public InputAction @Action1 => m_Wrapper.m_InGame_Action1;
        public InputAction @Action2 => m_Wrapper.m_InGame_Action2;
        public InputActionMap Get() { return m_Wrapper.m_InGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InGameActions set) { return set.Get(); }
        public void AddCallbacks(IInGameActions instance)
        {
            if (instance == null || m_Wrapper.m_InGameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InGameActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @Action1.started += instance.OnAction1;
            @Action1.performed += instance.OnAction1;
            @Action1.canceled += instance.OnAction1;
            @Action2.started += instance.OnAction2;
            @Action2.performed += instance.OnAction2;
            @Action2.canceled += instance.OnAction2;
        }

        private void UnregisterCallbacks(IInGameActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @Action1.started -= instance.OnAction1;
            @Action1.performed -= instance.OnAction1;
            @Action1.canceled -= instance.OnAction1;
            @Action2.started -= instance.OnAction2;
            @Action2.performed -= instance.OnAction2;
            @Action2.canceled -= instance.OnAction2;
        }

        public void RemoveCallbacks(IInGameActions instance)
        {
            if (m_Wrapper.m_InGameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInGameActions instance)
        {
            foreach (var item in m_Wrapper.m_InGameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InGameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InGameActions @InGame => new InGameActions(this);

    // UI Control
    private readonly InputActionMap m_UIControl;
    private List<IUIControlActions> m_UIControlActionsCallbackInterfaces = new List<IUIControlActions>();
    private readonly InputAction m_UIControl_CursorControl;
    private readonly InputAction m_UIControl_Select;
    private readonly InputAction m_UIControl_Option1;
    private readonly InputAction m_UIControl_Option2;
    private readonly InputAction m_UIControl_Exit;
    private readonly InputAction m_UIControl_NumKey1;
    private readonly InputAction m_UIControl_NumKey2;
    private readonly InputAction m_UIControl_NumKey3;
    private readonly InputAction m_UIControl_NumKey4;
    public struct UIControlActions
    {
        private @PlayerControls m_Wrapper;
        public UIControlActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CursorControl => m_Wrapper.m_UIControl_CursorControl;
        public InputAction @Select => m_Wrapper.m_UIControl_Select;
        public InputAction @Option1 => m_Wrapper.m_UIControl_Option1;
        public InputAction @Option2 => m_Wrapper.m_UIControl_Option2;
        public InputAction @Exit => m_Wrapper.m_UIControl_Exit;
        public InputAction @NumKey1 => m_Wrapper.m_UIControl_NumKey1;
        public InputAction @NumKey2 => m_Wrapper.m_UIControl_NumKey2;
        public InputAction @NumKey3 => m_Wrapper.m_UIControl_NumKey3;
        public InputAction @NumKey4 => m_Wrapper.m_UIControl_NumKey4;
        public InputActionMap Get() { return m_Wrapper.m_UIControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIControlActions set) { return set.Get(); }
        public void AddCallbacks(IUIControlActions instance)
        {
            if (instance == null || m_Wrapper.m_UIControlActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIControlActionsCallbackInterfaces.Add(instance);
            @CursorControl.started += instance.OnCursorControl;
            @CursorControl.performed += instance.OnCursorControl;
            @CursorControl.canceled += instance.OnCursorControl;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @Option1.started += instance.OnOption1;
            @Option1.performed += instance.OnOption1;
            @Option1.canceled += instance.OnOption1;
            @Option2.started += instance.OnOption2;
            @Option2.performed += instance.OnOption2;
            @Option2.canceled += instance.OnOption2;
            @Exit.started += instance.OnExit;
            @Exit.performed += instance.OnExit;
            @Exit.canceled += instance.OnExit;
            @NumKey1.started += instance.OnNumKey1;
            @NumKey1.performed += instance.OnNumKey1;
            @NumKey1.canceled += instance.OnNumKey1;
            @NumKey2.started += instance.OnNumKey2;
            @NumKey2.performed += instance.OnNumKey2;
            @NumKey2.canceled += instance.OnNumKey2;
            @NumKey3.started += instance.OnNumKey3;
            @NumKey3.performed += instance.OnNumKey3;
            @NumKey3.canceled += instance.OnNumKey3;
            @NumKey4.started += instance.OnNumKey4;
            @NumKey4.performed += instance.OnNumKey4;
            @NumKey4.canceled += instance.OnNumKey4;
        }

        private void UnregisterCallbacks(IUIControlActions instance)
        {
            @CursorControl.started -= instance.OnCursorControl;
            @CursorControl.performed -= instance.OnCursorControl;
            @CursorControl.canceled -= instance.OnCursorControl;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @Option1.started -= instance.OnOption1;
            @Option1.performed -= instance.OnOption1;
            @Option1.canceled -= instance.OnOption1;
            @Option2.started -= instance.OnOption2;
            @Option2.performed -= instance.OnOption2;
            @Option2.canceled -= instance.OnOption2;
            @Exit.started -= instance.OnExit;
            @Exit.performed -= instance.OnExit;
            @Exit.canceled -= instance.OnExit;
            @NumKey1.started -= instance.OnNumKey1;
            @NumKey1.performed -= instance.OnNumKey1;
            @NumKey1.canceled -= instance.OnNumKey1;
            @NumKey2.started -= instance.OnNumKey2;
            @NumKey2.performed -= instance.OnNumKey2;
            @NumKey2.canceled -= instance.OnNumKey2;
            @NumKey3.started -= instance.OnNumKey3;
            @NumKey3.performed -= instance.OnNumKey3;
            @NumKey3.canceled -= instance.OnNumKey3;
            @NumKey4.started -= instance.OnNumKey4;
            @NumKey4.performed -= instance.OnNumKey4;
            @NumKey4.canceled -= instance.OnNumKey4;
        }

        public void RemoveCallbacks(IUIControlActions instance)
        {
            if (m_Wrapper.m_UIControlActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIControlActions instance)
        {
            foreach (var item in m_Wrapper.m_UIControlActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIControlActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIControlActions @UIControl => new UIControlActions(this);
    private int m_PCSchemeIndex = -1;
    public InputControlScheme PCScheme
    {
        get
        {
            if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
            return asset.controlSchemes[m_PCSchemeIndex];
        }
    }
    private int m_ScreenSchemeIndex = -1;
    public InputControlScheme ScreenScheme
    {
        get
        {
            if (m_ScreenSchemeIndex == -1) m_ScreenSchemeIndex = asset.FindControlSchemeIndex("Screen");
            return asset.controlSchemes[m_ScreenSchemeIndex];
        }
    }
    public interface IInGameActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnAction1(InputAction.CallbackContext context);
        void OnAction2(InputAction.CallbackContext context);
    }
    public interface IUIControlActions
    {
        void OnCursorControl(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnOption1(InputAction.CallbackContext context);
        void OnOption2(InputAction.CallbackContext context);
        void OnExit(InputAction.CallbackContext context);
        void OnNumKey1(InputAction.CallbackContext context);
        void OnNumKey2(InputAction.CallbackContext context);
        void OnNumKey3(InputAction.CallbackContext context);
        void OnNumKey4(InputAction.CallbackContext context);
    }
}
